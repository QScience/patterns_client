<?php
/*
 * @file
 * Patterns Client module.
 *
 */

module_load_include('inc', 'patterns_client', 'includes/constants');
module_load_include('inc', 'patterns_client', 'includes/config');
module_load_include('inc', 'patterns_client', 'includes/io');

/**
 * Implements hook_help().
 */
function patterns_client_help($path,$arg) {
  switch ($path) {
    case "admin/help#patterns_client":
      return '<p>'.t("help for patterns_client module").'<p>';
      break;
  }
}

/**
 * Implements hook_menu().
 */
function patterns_client_menu() {
  // This is the client form menu entry. This form is used to allow user
  // interaction with the services, but again, user interface is not required
  // to create an XML-RPC client with Drupal.
  
  //Add new tab in Patterns import to list patterns stored in the server
  $items['admin/patterns/import/patterns-server'] = array(
      'title' => 'Patterns at Patterns Server',
      'page callback' => 'patterns_client_import_patterns_server',
      'access arguments' => array('administer patterns'),
      'type' => MENU_LOCAL_TASK,
  );
  //Add new entry to fetch patterns from server (based on server PID)
  $items['admin/patterns/import/patterns-server/fetch/%'] = array(
      'page callback' => 'patterns_client_fetch_pattern',
      'page arguments' => array(5),
      'access arguments' => array('administer patterns'),
      'type' => MENU_CALLBACK,
  );
  //Add new tab in Patterns import to search patterns stored in the server
  $items['admin/patterns/import/patterns-server/search/%'] = array(
      'title' => 'Patterns at Patterns Server',
      'page callback' => 'patterns_client_search_patterns_server',
      'access arguments' => array('administer patterns'),
      'type' => MENU_LOCAL_TASK,
  );
  return $items;
}


/**
 * Implements hook_permission().
 */
function patterns_client_permission() {
  return array(
    'access patterns_client' => array(
      'title' => t('Access permission for the patterns_client module'),
      )
    );
}

/**
 * Implements hook_menu_alter().
 */
function patterns_client_menu_alter(&$items) {
  $items['admin/patterns/share'] = array(
    'title' => 'Share',
    'page callback' => 'patterns_client_config',
    'access arguments' => array('administer patterns'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 9,
  );
  return $items;
}

function patterns_client_patterns_publish($pattern) {
  if (variable_get('patterns_client_auto_publish', FALSE)) {
    patterns_client_push_patterns(array($pattern));
  }
  else {
    drupal_set_message(t('Automatic publishing of patterns not enabled.'), 'warning');
  }
}

/**
 * 
 * Retrieves the list of patterns currently stored in the server and
 * displays them in a table with a pager.
 * 
 * @return string containing the current list of patterns stored in the server
 */
function patterns_client_import_patterns_server() {
  // Retrieve current list of patterns in the server
  $patterns_list = _patterns_client_get_patterns_server_list(1000);
  
  // Prepare header and rows to be themed as a table
  //Added Attributes below to allow the link to open in a separate window
  $header = array(
    array('data' => t('PID (in the server)')),
    array('data' => t('UUID')),
    array('data' => t('Title')),
    array('data' => t('Description')),
    array('data' => t('Author')),
    array('data' => t('Format')),
    array('data' => t('Preview')),
    array('data' => t('Fetch')),
  );
  foreach ($patterns_list as $pattern) {
    $rows[] = array(
        array('data' => $pattern['pid']),
        array('data' => $pattern['uuuid']),
        array('data' => $pattern['title']),
        array('data' => $pattern['description']),
        array('data' => $pattern['author']),
        array('data' => $pattern['format']),
        array('data' => l(t('Preview'), $pattern['view_url'])),
        array('data' => l(t('Fetch'), 'admin/patterns/import/patterns-server/fetch/' . $pattern['pid'])),
    );
  }

  // We cannot use the default pager from the query, so we will need to divide the date in chunks
  $per_page = 15;
  // Initialize the pager
  $current_page = pager_default_initialize(count($rows), $per_page);
  // Split your list into page sized chunks
  $chunks = array_chunk($rows, $per_page, TRUE);
  // Show the appropriate items from the list
  $output = theme('table', array('header' => $header, 'rows' => $chunks[$current_page]));
  // Show the pager
  $output .= theme('pager', array('quantity',count($rows)));
  return $output;
}

/**
 * 
 * Fetches a pattern from the server and adapt it to include the
 * current user and the parenthood relationship.
 * 
 * @param string $pid  Pattern ID in the server
 */
function patterns_client_fetch_pattern($pid) {
  // Retrieve new pattern already modified to include the parent
  $result = _patterns_client_fetch_server_pattern($pid);

  // Display a message according to the status return by _patterns_io_save_pattern()
  if (!empty($result['msg'])) {
    $type = ($result['status'] == PATTERNS_SUCCESS) ? 'status' : 'error';
    drupal_set_message($result['msg'], $type);
  }
  drupal_goto('admin/patterns/import/patterns-server');
}
