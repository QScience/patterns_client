<?php
/*
 * @file
 * Patterns Client module.
 *
 */

module_load_include('inc', 'patterns_client', 'includes/constants');
module_load_include('inc', 'patterns_client', 'includes/config');
module_load_include('inc', 'patterns_client', 'includes/io');

/**
 * Implements hook_help().
 */
function patterns_client_help($path,$arg) {
  switch ($path) {
    case "admin/help#patterns_client":
      return '<p>'.t("help for patterns_client module").'<p>';
      break;
  }
}

function patterns_client_menu() {
  // This is the client form menu entry. This form is used to allow user
  // interaction with the services, but again, user interface is not required
  // to create an XML-RPC client with Drupal.
  $items['patterns-server-list'] = array(
      'title'           => 'Patterns Server List',
      'description'     => 'Get the list of patterns from the server chosen',
      'page callback' => '_patterns_client_get_patterns_list',
      'access arguments' => array('administer patterns'),
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function patterns_client_permission() {
  return array(
    'access patterns_client' => array(
      'title' => t('Access permission for the patterns_client module'),
      )
    );
}

/**
 * Implements hook_menu_alter().
 */
function patterns_client_menu_alter(&$items) {
  $items['admin/patterns/share'] = array(
    'title' => 'Share',
    'page callback' => 'patterns_client_config',
    'access arguments' => array('administer patterns'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 9,
  );
  return $items;
}

function patterns_client_patterns_publish($pattern) {
  if (variable_get('patterns_client_auto_publish', FALSE)) {
    patterns_client_push_patterns(array($pattern));
  }
  else {
    drupal_set_message(t('Automatic publishing of patterns not enabled.'), 'warning');
  }
}

/**
 * Submit handler to query xmlrpc_example.add.
 *
 * Submit: query the XML-RPC endpoint for the method xmlrpc_example.add
 * and report the result as a Drupal message.
 *
 * @param $form
 *   form array
 * @param $form_state
 *   form_state array
 *
 * @see xmlrpc()
 * @see xmlrpc_errno()
 * @see xmlrpc_error_msg()
 */
function _patterns_client_get_patterns_list() {
  // First define the endpoint of the XML-RPC service, in this case is our
  // own server.
  $server = url('http://localhost/qsi_server' . '/xmlrpc.php', array('external' => TRUE));
  // Then we should define the method to call. xmlrpc() requires that all the
  // information related to the called method is passed as an array in the form
  // of 'method_name' => arguments_array
  $options = array(
      'patterns_server.get_patterns_list' => array(
          10,
      ),
  );
  // Make the xmlrpc request and process the results.
  $result = xmlrpc($server, $options);
  if ($result === FALSE) {
    drupal_set_message(
    t('Error return from xmlrpc(): Error: @errno, Message: @message',
    array('@errno' => xmlrpc_errno(), '@message' => xmlrpc_error_msg())),
    'error'
        );
  }
  else {
    drupal_set_message(
    t('The XML-RPC server returned this response: @response',
    array('@response' => print_r($result, TRUE)))
    );
  }
}
